{"ast":null,"code":"var _jsxFileName = \"/Users/antoniocortabarria/Desktop/CS32/term-project-acortaba-fleahy-scortaba-spawar2/site/src/components/pages/Andrews.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Pages.css';\nimport { MyMenu } from './Menu';\nimport { initializeApp } from \"firebase/app\";\nimport { firebaseConfig } from '../firebase';\nimport { doc, getFirestore, collection, where, getDoc, query, getDocs } from \"firebase/firestore\"; //import MyMenu from './Menu'\n//Global Variables\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TEXT_diningHeader_accessible_name = 'Andrews';\nlet FoodList = [[]];\nlet FoodMap = new Map();\n\nasync function populateFoodList() {\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const docRef123 = collection(db, \"today food\");\n  const q = query(docRef123, where(\"dininghall\", \"==\", 'Andrews'));\n  const docRef = doc(db, 'today food', 'Cheese Pizza Andrews');\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    console.log(\"Document data:\", docSnap.data());\n  } else {\n    console.log(\"noooooooooo\");\n  }\n\n  const food = await getDocs(q).then(r => r.docs.forEach(doc => {\n    const data = doc.data();\n\n    if (!FoodMap.has(data.food)) {\n      FoodMap.set(data.food, ['rating']);\n      FoodList.push([data.food, '0']);\n    }\n  }));\n  console.log(\"after populate, FoodList = \", FoodList);\n  console.log(FoodMap);\n}\n\nexport function Andrews() {\n  _s();\n\n  const [foods, setFoods] = useState([]);\n\n  async function loadFoods() {\n    await populateFoodList();\n    setFoods(FoodList);\n  }\n\n  useEffect(() => {\n    console.log(\"getting menu\");\n    loadFoods();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'background-box',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"aria-label\": TEXT_diningHeader_accessible_name,\n        children: \"Andrews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyMenu, {\n        myFoods: FoodList,\n        diningHall: \"Andrews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Andrews, \"YMM5M0iTqzJSbBHkFT1Cq0yNesc=\");\n\n_c = Andrews;\nexport default Andrews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Andrews\");","map":{"version":3,"names":["React","useState","useEffect","MyMenu","initializeApp","firebaseConfig","doc","getFirestore","collection","where","getDoc","query","getDocs","TEXT_diningHeader_accessible_name","FoodList","FoodMap","Map","populateFoodList","app","db","docRef123","q","docRef","docSnap","exists","console","log","data","food","then","r","docs","forEach","has","set","push","Andrews","foods","setFoods","loadFoods"],"sources":["/Users/antoniocortabarria/Desktop/CS32/term-project-acortaba-fleahy-scortaba-spawar2/site/src/components/pages/Andrews.tsx"],"sourcesContent":["import React, {useState, Dispatch, SetStateAction, useEffect} from 'react';\nimport cheerio from 'cheerio';\nimport '../styles/Pages.css'\nimport {MyMenu} from './Menu'\nimport { initializeApp } from \"firebase/app\";\nimport {firebaseConfig} from '../firebase'\nimport { doc, getFirestore, setDoc,collection, where, getDoc, query, queryEqual, getDocs, deleteDoc } from \"firebase/firestore\"; \n//import MyMenu from './Menu'\n\n\n//Global Variables\nexport const TEXT_diningHeader_accessible_name  = 'Andrews'\n\n\n\n  let FoodList: string[][] = [[]]\n\n  let FoodMap: Map<String, String[]> = new Map();\n  \n\n  async function populateFoodList(){\n      const app = initializeApp(firebaseConfig);\n      const db = getFirestore(app)\n      const docRef123 = collection(db,\"today food\")\n      const q = query(docRef123, where(\"dininghall\", \"==\", 'Andrews'));\n      const docRef = doc(db, 'today food', 'Cheese Pizza Andrews');\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n          console.log(\"Document data:\", docSnap.data());\n        } else {\n      console.log(\"noooooooooo\")\n        }\n      const food= await getDocs(q).then(r => r.docs.forEach((doc) => {\n          const data = doc.data()\n          if (!FoodMap.has(data.food)){\n              FoodMap.set(data.food,['rating'])\n              FoodList.push([data.food, '0'])\n          }\n      }))\n      console.log(\"after populate, FoodList = \", FoodList)\n      console.log(FoodMap)\n   }\n  \n  \nexport function Andrews() {\n    const [foods, setFoods] = useState<string[][]>([]);\n\n    async function loadFoods(){\n        await populateFoodList()\n        setFoods(FoodList)\n    }\n\n  useEffect(()=> {\n        console.log(\"getting menu\")\n        loadFoods()   \n\n  }, [])\n    return (\n        <div className ={\"background\"}>\n            <div className={'background-box'}>\n                <h1 aria-label = {TEXT_diningHeader_accessible_name}>Andrews</h1>\n                <MyMenu myFoods={FoodList} diningHall = {\"Andrews\"}/>               \n            </div>\n        </div>\n\n    )\n}\n\nexport default Andrews;\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAmDC,SAAnD,QAAmE,OAAnE;AAEA,OAAO,qBAAP;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAAQC,cAAR,QAA6B,aAA7B;AACA,SAASC,GAAT,EAAcC,YAAd,EAAmCC,UAAnC,EAA+CC,KAA/C,EAAsDC,MAAtD,EAA8DC,KAA9D,EAAiFC,OAAjF,QAA2G,oBAA3G,C,CACA;AAGA;;;AACA,OAAO,MAAMC,iCAAiC,GAAI,SAA3C;AAIL,IAAIC,QAAoB,GAAG,CAAC,EAAD,CAA3B;AAEA,IAAIC,OAA8B,GAAG,IAAIC,GAAJ,EAArC;;AAGA,eAAeC,gBAAf,GAAiC;EAC7B,MAAMC,GAAG,GAAGd,aAAa,CAACC,cAAD,CAAzB;EACA,MAAMc,EAAE,GAAGZ,YAAY,CAACW,GAAD,CAAvB;EACA,MAAME,SAAS,GAAGZ,UAAU,CAACW,EAAD,EAAI,YAAJ,CAA5B;EACA,MAAME,CAAC,GAAGV,KAAK,CAACS,SAAD,EAAYX,KAAK,CAAC,YAAD,EAAe,IAAf,EAAqB,SAArB,CAAjB,CAAf;EACA,MAAMa,MAAM,GAAGhB,GAAG,CAACa,EAAD,EAAK,YAAL,EAAmB,sBAAnB,CAAlB;EACA,MAAMI,OAAO,GAAG,MAAMb,MAAM,CAACY,MAAD,CAA5B;;EACA,IAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;IAClBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,OAAO,CAACI,IAAR,EAA9B;EACD,CAFH,MAES;IACTF,OAAO,CAACC,GAAR,CAAY,aAAZ;EACG;;EACH,MAAME,IAAI,GAAE,MAAMhB,OAAO,CAACS,CAAD,CAAP,CAAWQ,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAgB1B,GAAD,IAAS;IAC3D,MAAMqB,IAAI,GAAGrB,GAAG,CAACqB,IAAJ,EAAb;;IACA,IAAI,CAACZ,OAAO,CAACkB,GAAR,CAAYN,IAAI,CAACC,IAAjB,CAAL,EAA4B;MACxBb,OAAO,CAACmB,GAAR,CAAYP,IAAI,CAACC,IAAjB,EAAsB,CAAC,QAAD,CAAtB;MACAd,QAAQ,CAACqB,IAAT,CAAc,CAACR,IAAI,CAACC,IAAN,EAAY,GAAZ,CAAd;IACH;EACJ,CANsC,CAArB,CAAlB;EAOAH,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CZ,QAA3C;EACAW,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACF;;AAGJ,OAAO,SAASqB,OAAT,GAAmB;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAa,EAAb,CAAlC;;EAEA,eAAesC,SAAf,GAA0B;IACtB,MAAMtB,gBAAgB,EAAtB;IACAqB,QAAQ,CAACxB,QAAD,CAAR;EACH;;EAEHZ,SAAS,CAAC,MAAK;IACTuB,OAAO,CAACC,GAAR,CAAY,cAAZ;IACAa,SAAS;EAEd,CAJQ,EAIN,EAJM,CAAT;EAKE,oBACI;IAAK,SAAS,EAAG,YAAjB;IAAA,uBACI;MAAK,SAAS,EAAE,gBAAhB;MAAA,wBACI;QAAI,cAAc1B,iCAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,OAAO,EAAEC,QAAjB;QAA2B,UAAU,EAAI;MAAzC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GAtBesB,O;;KAAAA,O;AAwBhB,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}